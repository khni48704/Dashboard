<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="/styles.css" />
    <link href="https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap" rel="stylesheet"> 
    <link
      href="https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <title>Create new template</title>
</head>
<body class="body-flex">
    {{> navigation}}
    <section class="section-secondary">
        <div class="default-div">
          <h1>Templates</h1>
          <h2>Create new template</h2>
          <form class="forms" method="POST" action="/">
          <input type="text" name="title" placeholder="Title" required/>
          <input type="text" name="---" placeholder="---" required/>
          <input type="text" name="---" placeholder="---" required/>
          <button>Create template</button>
          </form>
          </div>
    </section>
</body>

<script>
    document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const changeFont = document.getElementById("change-font");
    const fontElement = document.querySelector(".accessibilityFont");
    const savedFont = localStorage.getItem("font");
    const body = document.body;

    
    
    if (savedFont === "isAccessible") {
      console.log(savedFont);
        body.classList.add("isAccessible");
        if (fontElement) {
            fontElement.textContent = "Accessible font";
        }
    } else {
        body.classList.remove("isAccessible");
        if (fontElement) {
            fontElement.textContent = "Default font";
        }
    }

    const savedTheme = localStorage.getItem("theme");
    if (savedTheme) {
        body.classList.add(savedTheme);
        themeToggle.querySelector(".icon-darklightmode").textContent = savedTheme === "dark-mode" ? "‚òÄÔ∏è" : "üåô";
    }

    themeToggle.addEventListener("click", () => {
        const isDarkMode = body.classList.toggle("dark-mode");
        themeToggle.querySelector(".icon-darklightmode").textContent = isDarkMode ? "‚òÄÔ∏è" : "üåô";

        localStorage.setItem("theme", isDarkMode ? "dark-mode" : "light-mode");
    });
});
</script>